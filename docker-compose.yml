version: "3.8"

x-env: &default-env
  TZ: UTC

services:
  redpanda:
    image: redpandadata/redpanda:latest
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --check=false --node-id 0
    ports:
      - "9092:9092"
      - "9644:9644"
    environment:
      <<: *default-env

  redpanda-console:
    image: redpandadata/console:latest
    depends_on: [redpanda]
    ports:
      - "8080:8080"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    command: ["/bin/sh","-c","echo \"$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"]

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      <<: *default-env
    volumes:
      - minio_data:/data

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: svc
      POSTGRES_PASSWORD: svcpass
      POSTGRES_DB: eventsdb
      <<: *default-env
    volumes:
      - pg_data:/var/lib/postgresql/data

  etcd:
    image: quay.io/coreos/etcd:v3.5.7
    command: >
      etcd -advertise-client-urls http://0.0.0.0:2379
           -listen-client-urls http://0.0.0.0:2379
    ports:
      - "2379:2379"
    environment:
      <<: *default-env

  milvus:
    image: milvusdb/milvus:v2.2.13
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      <<: *default-env
    depends_on: [etcd, minio]
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    depends_on: [postgres, milvus, minio, redpanda]
    environment:
      DATABASE_URL: postgresql+psycopg2://svc:svcpass@postgres:5432/eventsdb
      KAFKA_BOOTSTRAP: redpanda:9092
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MILVUS_HOST: milvus
      MILVUS_PORT: 19530
      JWT_SECRET: devsecret
      PYTHONPATH: /app
      <<: *default-env
    ports:
      - "8000:8000"

  stream-processor:
    build:
      context: .
      dockerfile: ./stream-processor/Dockerfile
    depends_on: [postgres, redpanda]
    environment:
      DATABASE_URL: postgresql+psycopg2://svc:svcpass@postgres:5432/eventsdb
      REDPANDA_BOOTSTRAP: redpanda:9092
      PYTHONPATH: /app
      <<: *default-env

  nginx-hls:
    image: nginx:alpine
    volumes:
      - hls_data:/usr/share/nginx/html/hls
    ports:
      - "8088:80"

  edge-agent:
    build:
      context: .
      dockerfile: ./edge-agent/Dockerfile
    depends_on: [redpanda, minio, milvus]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      VIDEO_DIR: /data/videos
      CHUNK_SECONDS: 10
      REDPANDA_BOOTSTRAP: redpanda:9092
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MILVUS_HOST: milvus
      MILVUS_PORT: 19530
      HLS_OUT_DIR: /hls
      PYTHONPATH: /app
      <<: *default-env
    volumes:
      - ./video-samples:/data/videos:ro
      - hls_data:/hls

volumes:
  minio_data:
  pg_data:
  milvus_data:
  hls_data:
